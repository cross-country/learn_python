#!/usr/local/bin/env python							-первая строка исполняемого скрипта
#!/usr/local/bin/python


dir()         										-ф-ция   возвращает список имен определяемых объектом(модули, функции, классы, переменные)
Поля класса	 										-это переменные класса
.__dict__											-встроенный атрибут объектов Python. Возвращает словарь(ключ:значение) {имя свойства(поля): текущее значение}
.__doc__   		 									-строки документации (help())
'''   '''	        								-строки документации
.items()    										-метод dictionary, который возвращает список кортежей (ключ, значение)
sep=" "; end=" "    								-свойства ф-ции print()
@staticmethod   									-декоратор
@classmethod
@abstractmethod
exec()	  											 -функция выполняет команду записанную как строка, или файл .txt
eval()    		 									-выполняет вычисления цифр в строке
repr()    		 									-оборачивает объект в кавычки
r" "    		 									-перед строкой означает необрабатываемую строку

			Методы классов, которые перегружают операторы и ф-ции:
__init__()											-конструктор объектов
__del__()											-дестрруктор (вызывается при удалении объекта)
__str__()											-преобразование объекта к строковому представлению (перегружает print(); str())
__add__()											-перегружает оператор сложения(объект участвует в сложении с левой стороны)
__setattr__()										-перегружает оператор присваивания
__getitem__()										-пер-ет операцию извлечения элемента по индексу(объект похож список)
__call__()											-позволяет использовать объект как функцию
__repr__()											-работает по аналогии с __str__(); обарачивает строку в дополнительные кавычки.
__sub__()											-вычитание
__mul__()											-умножение
__truediv__()										-деление


			Методы строки:
.replace('old', 'new')								-заменяет элемент строки новым элементом
.upper()											-возвращает всю строку в верхнем регистре
.lower()											-в нижнем регистре
.isupper()											-True если все элементы в верхнем регистре
.islower()											-True если все элементы в нижнем регистре
.strip()											-удаляет пробелы в начале и конце строки
.split('-')											-разбивает строку и возвращает список. По умолчанию использует пробелы.
'-'.join(list)										-соединяет список в строку. Список передается как аргумент, разделитель(если требуется)
														прописывается в строке.
\													-escape character
.find('str', 0, 8)									-находит подстроку и возвращает индекс первого элемента(иначе -1). Числовые аргументы указывают диапазон поиска.


			Создание пакетов:
# в файле __init__.py
__all__ = ['file1', 'file2']
from .file1 import *
from ..file2 import *
from .folder import *
from . import file1, file2

			SQLite:
import sqlite3
connect()											-ф-я создает объект класса Connection
Connection.cursor()									-создает объект класса Сursor
Cursor.execute()									-с помощью этого метода задаются SQL-комманды
Cursor.executemany()
Cursor.executescript() 								-в аргументе передается скрипт на языке SQL
Cursor.fetchone()									-извлекает данные из объекта по одной строке
Cursor.fetchmany()									-извлекает данные из объекта	...
Cursor.fetchall()									-извлекает данные из объекта	...
Cursor.__next__()									-извлекает данные из объекта по одной строке
Connection.commit()									-
Connection.close()									-
Connection.rollback()								-
